version: '3.8'
services:
  message-broker:
    image: rabbitmq:3.9-management
    container_name: mcp-use
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  git-server:
    image: gitea/gitea:latest
    container_name: git-server
    environment:
      USER_UID: 1000
      USER_GID: 1000
    ports:
      - "3000:3000"
      - "22:22"
    volumes:
      - git-data:/data

  weaviate:
    image: semitechnologies/weaviate:1.16.3
    container_name: weaviate
    ports:
      - "8080:8080"
      - "2112:2112"
    environment:
      - QUERY_DEFAULTS_LIMIT=25
      - AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED=true
      - PERSISTENCE_DATA_PATH=/var/lib/weaviate
      - PROMETHEUS_MONITORING_ENABLED=true
    volumes:
      - weaviate-data:/var/lib/weaviate

  # MCP Servers for Agent Tool Access
  mcp-fetch:
    image: ghcr.io/chungoid/fetch:latest
    container_name: mcp-fetch
    ports:
      - "8100:8080"
    environment:
      - MCP_SERVER_NAME=fetch
      - LOG_LEVEL=INFO
    restart: unless-stopped

  mcp-filesystem:
    image: ghcr.io/chungoid/filesystem:latest
    container_name: mcp-filesystem
    ports:
      - "8101:8080"
    environment:
      - MCP_SERVER_NAME=filesystem
      - LOG_LEVEL=INFO
    volumes:
      - ./generated_project:/workspace
      - /tmp/mcp-workspace:/mcp-workspace
    restart: unless-stopped

  mcp-git:
    image: ghcr.io/chungoid/git:latest
    container_name: mcp-git
    ports:
      - "8102:8080"
    environment:
      - MCP_SERVER_NAME=git
      - LOG_LEVEL=INFO
    volumes:
      - git-repos:/repos
      - ./generated_project:/workspace
    restart: unless-stopped

  mcp-memory:
    image: ghcr.io/chungoid/memory:latest
    container_name: mcp-memory
    ports:
      - "8103:8080"
    environment:
      - MCP_SERVER_NAME=memory
      - LOG_LEVEL=INFO
    volumes:
      - mcp-memory-data:/data
    restart: unless-stopped

  mcp-sequentialthinking:
    image: ghcr.io/chungoid/sequentialthinking:latest
    container_name: mcp-sequentialthinking
    ports:
      - "8104:8080"
    environment:
      - MCP_SERVER_NAME=sequentialthinking
      - LOG_LEVEL=INFO
    restart: unless-stopped

  mcp-time:
    image: ghcr.io/chungoid/time:latest
    container_name: mcp-time
    ports:
      - "8105:8080"
    environment:
      - MCP_SERVER_NAME=time
      - LOG_LEVEL=INFO
    restart: unless-stopped

  mcp-context7:
    image: ghcr.io/chungoid/context7:latest
    container_name: mcp-context7
    ports:
      - "8106:8080"
    environment:
      - MCP_SERVER_NAME=context7
      - LOG_LEVEL=INFO
    volumes:
      - mcp-context-data:/data
    restart: unless-stopped

  analysis-agent:
    build:
      context: .
      dockerfile: ./services/analysis-agent/Dockerfile
    container_name: analysis-agent
    depends_on:
      - message-broker
      - weaviate
      - mcp-filesystem
      - mcp-git
      - mcp-memory
      - mcp-sequentialthinking
      - mcp-time
      - mcp-context7
      - mcp-fetch
    environment:
      BROKER_URL: amqp://guest:guest@mcp-use:5672/
      VECTORSTORE_URL: http://weaviate:8080
      LOG_LEVEL: INFO
      SUBSCRIBE_TOPIC: tasks.analysis
      PUBLISH_TOPIC: tasks.planning
      # OpenAI Configuration
      OPENAI_API_KEY: sk-test-key-for-development-only
      # MCP Server URLs - Full Access
      MCP_FILESYSTEM_URL: http://mcp-filesystem:8080
      MCP_GIT_URL: http://mcp-git:8080
      MCP_MEMORY_URL: http://mcp-memory:8080
      MCP_SEQUENTIALTHINKING_URL: http://mcp-sequentialthinking:8080
      MCP_TIME_URL: http://mcp-time:8080
      MCP_CONTEXT7_URL: http://mcp-context7:8080
      MCP_FETCH_URL: http://mcp-fetch:8080
    ports:
      - "8001:8000"

  planning-agent:
    build:
      context: .
      dockerfile: ./services/planning-agent/Dockerfile
    container_name: planning-agent
    depends_on:
      - message-broker
      - mcp-filesystem
      - mcp-git
      - mcp-memory
      - mcp-sequentialthinking
      - mcp-time
      - mcp-context7
      - mcp-fetch
    environment:
      BROKER_URL: amqp://guest:guest@mcp-use:5672/
      LOG_LEVEL: INFO
      SUBSCRIBE_TOPIC: tasks.planning
      PUBLISH_TOPIC: tasks.blueprint
      # MCP Server URLs - Full Access
      MCP_FILESYSTEM_URL: http://mcp-filesystem:8080
      MCP_GIT_URL: http://mcp-git:8080
      MCP_MEMORY_URL: http://mcp-memory:8080
      MCP_SEQUENTIALTHINKING_URL: http://mcp-sequentialthinking:8080
      MCP_TIME_URL: http://mcp-time:8080
      MCP_CONTEXT7_URL: http://mcp-context7:8080
      MCP_FETCH_URL: http://mcp-fetch:8080
    ports:
      - "8003:8000"

  blueprint-agent:
    build:
      context: .
      dockerfile: ./services/blueprint-agent/Dockerfile
    container_name: blueprint-agent
    depends_on:
      - message-broker
      - mcp-filesystem
      - mcp-git
      - mcp-memory
      - mcp-sequentialthinking
      - mcp-time
      - mcp-context7
      - mcp-fetch
    environment:
      BROKER_URL: amqp://guest:guest@mcp-use:5672/
      LOG_LEVEL: INFO
      SUBSCRIBE_TOPIC: tasks.blueprint
      PUBLISH_TOPIC: tasks.coding
      # MCP Server URLs - Full Access
      MCP_FILESYSTEM_URL: http://mcp-filesystem:8080
      MCP_GIT_URL: http://mcp-git:8080
      MCP_MEMORY_URL: http://mcp-memory:8080
      MCP_SEQUENTIALTHINKING_URL: http://mcp-sequentialthinking:8080
      MCP_TIME_URL: http://mcp-time:8080
      MCP_CONTEXT7_URL: http://mcp-context7:8080
      MCP_FETCH_URL: http://mcp-fetch:8080
    ports:
      - "8004:8000"

  code-agent:
    build:
      context: .
      dockerfile: ./services/code-agent/Dockerfile
    container_name: code-agent
    depends_on:
      - message-broker
      - git-server
      - mcp-filesystem
      - mcp-git
      - mcp-fetch
      - mcp-memory
      - mcp-sequentialthinking
      - mcp-time
      - mcp-context7
    environment:
      BROKER_URL: amqp://guest:guest@mcp-use:5672/
      GIT_URL: http://git-server:3000
      LOG_LEVEL: INFO
      SUBSCRIBE_TOPIC: tasks.coding
      PUBLISH_TOPIC: tasks.testing
      # MCP Server URLs - Full Access
      MCP_FILESYSTEM_URL: http://mcp-filesystem:8080
      MCP_GIT_URL: http://mcp-git:8080
      MCP_FETCH_URL: http://mcp-fetch:8080
      MCP_MEMORY_URL: http://mcp-memory:8080
      MCP_SEQUENTIALTHINKING_URL: http://mcp-sequentialthinking:8080
      MCP_TIME_URL: http://mcp-time:8080
      MCP_CONTEXT7_URL: http://mcp-context7:8080
    ports:
      - "8005:8000"

  test-agent:
    build:
      context: .
      dockerfile: ./services/test-agent/Dockerfile
    container_name: test-agent
    depends_on:
      - message-broker
      - code-agent
      - git-server
      - mcp-filesystem
      - mcp-git
      - mcp-memory
      - mcp-sequentialthinking
      - mcp-time
      - mcp-context7
      - mcp-fetch
    environment:
      BROKER_URL: amqp://guest:guest@mcp-use:5672/
      GIT_URL: http://git-server:3000
      LOG_LEVEL: INFO
      SUBSCRIBE_TOPIC: tasks.testing
      PUBLISH_TOPIC: tasks.testing
      COMPLETION_TOPIC: tasks.completion
      # MCP Server URLs - Full Access
      MCP_FILESYSTEM_URL: http://mcp-filesystem:8080
      MCP_GIT_URL: http://mcp-git:8080
      MCP_MEMORY_URL: http://mcp-memory:8080
      MCP_SEQUENTIALTHINKING_URL: http://mcp-sequentialthinking:8080
      MCP_TIME_URL: http://mcp-time:8080
      MCP_CONTEXT7_URL: http://mcp-context7:8080
      MCP_FETCH_URL: http://mcp-fetch:8080
    ports:
      - "8006:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # For Docker-in-Docker deployment

  orchestrator-agent:
    build:
      context: .
      dockerfile: ./services/orchestrator-agent/Dockerfile
    container_name: orchestrator-agent
    depends_on:
      - message-broker
      - mcp-filesystem
      - mcp-git
      - mcp-memory
      - mcp-sequentialthinking
      - mcp-time
      - mcp-context7
      - mcp-fetch
    environment:
      BROKER_URL: amqp://guest:guest@mcp-use:5672/
      DASHBOARD_WS_URL: ws://orchestrator-agent:8000/ws
      LOG_LEVEL: INFO
      SUBSCRIBE_TOPICS: tasks.analysis,tasks.planning,tasks.blueprint,tasks.coding,tasks.testing,tasks.completion
      # MCP Server URLs - Full Access
      MCP_FILESYSTEM_URL: http://mcp-filesystem:8080
      MCP_GIT_URL: http://mcp-git:8080
      MCP_MEMORY_URL: http://mcp-memory:8080
      MCP_SEQUENTIALTHINKING_URL: http://mcp-sequentialthinking:8080
      MCP_TIME_URL: http://mcp-time:8080
      MCP_CONTEXT7_URL: http://mcp-context7:8080
      MCP_FETCH_URL: http://mcp-fetch:8080
    ports:
      - "8002:8000"

  api-gateway:
    build:
      context: .
      dockerfile: ./services/api-gateway/Dockerfile
    container_name: api-gateway
    depends_on:
      - message-broker
      - orchestrator-agent
      - mcp-filesystem
      - mcp-git
      - mcp-memory
      - mcp-sequentialthinking
      - mcp-time
      - mcp-context7
      - mcp-fetch
    environment:
      BROKER_URL: amqp://guest:guest@mcp-use:5672/
      ORCHESTRATOR_URL: http://orchestrator-agent:8000
      LOG_LEVEL: INFO
      # MCP Server URLs - Full Access
      MCP_FILESYSTEM_URL: http://mcp-filesystem:8080
      MCP_GIT_URL: http://mcp-git:8080
      MCP_MEMORY_URL: http://mcp-memory:8080
      MCP_SEQUENTIALTHINKING_URL: http://mcp-sequentialthinking:8080
      MCP_TIME_URL: http://mcp-time:8080
      MCP_CONTEXT7_URL: http://mcp-context7:8080
      MCP_FETCH_URL: http://mcp-fetch:8080
    ports:
      - "8000:8000"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      - prometheus
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    ports:
      - "3001:3000"

  jaeger:
    image: jaegertracing/all-in-one:1.21
    container_name: jaeger
    ports:
      - "6831:6831/udp"
      - "16686:16686"

volumes:
  rabbitmq-data:
  git-data:
  weaviate-data:
  git-repos:
  mcp-memory-data:
  mcp-context-data: