apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-agent
  namespace: pipeline
  labels:
    app: test-agent
spec:
  replicas: 2
  selector:
    matchLabels:
      app: test-agent
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: test-agent
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: test-agent
          image: myregistry/test-agent:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8000
            - name: metrics
              containerPort: 9000
          env:
            - name: MESSAGE_BUS_URL
              valueFrom:
                configMapKeyRef:
                  name: messaging-config
                  key: url
            - name: SUBSCRIBE_TOPICS
              value: tasks.coding
            - name: PUBLISH_TOPIC
              value: tasks.testing
            - name: VECTORSTORE_URL
              valueFrom:
                secretKeyRef:
                  name: rag-secrets
                  key: vectorstore_url
            - name: LOG_LEVEL
              value: INFO
            - name: PYTHONUNBUFFERED
              value: "1"
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 3
          resources:
            requests:
              cpu: 250m
              memory: 512Mi
            limits:
              cpu: 1000m
              memory: 1Gi
          volumeMounts:
            - name: config-volume
              mountPath: /app/config
      restartPolicy: Always
      volumes:
        - name: config-volume
          configMap:
            name: test-agent-config
---
apiVersion: v1
kind: Service
metadata:
  name: test-agent
  namespace: pipeline
  labels:
    app: test-agent
spec:
  selector:
    app: test-agent
  ports:
    - name: http
      port: 80
      targetPort: 8000
    - name: metrics
      port: 9000
      targetPort: 9000
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: test-agent
  namespace: pipeline
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: test-agent
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60