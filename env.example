# Messaging Fabric: mcp-use  
MCP_USE_BROKER_URL=amqp://username:password@mcp-broker.example.com:5672/  
MCP_USE_USERNAME=username  
MCP_USE_PASSWORD=password  

# Swarms P2P  
SWARMS_BOOTSTRAP_PEERS=peer1.example.com:9000,peer2.example.com:9000  
SWARMS_DISCOVERY_TIMEOUT=30  
SWARMS_HEARTBEAT_INTERVAL=10  

# Topics  
TOPIC_TASKS_ANALYSIS=tasks.analysis  
TOPIC_TASKS_PLANNING=tasks.planning  
TOPIC_TASKS_BLUEPRINT=tasks.blueprint  
TOPIC_TASKS_CODING=tasks.coding  
TOPIC_TASKS_TESTING=tasks.testing  
TOPIC_ORCHESTRATION_EVENTS=orchestration.events  

# FastAPI Settings  
FASTAPI_HOST=0.0.0.0  
FASTAPI_PORT=8000  
FASTAPI_DEBUG=false  

# OpenAI / Azure OpenAI  
OPENAI_API_KEY=sk-your_openai_api_key  
OPENAI_API_BASE=https://api.openai.com/v1  
OPENAI_API_TYPE=openai  
OPENAI_API_VERSION=2023-05-15  
OPENAI_MODEL=gpt-4  

# Vector Store: Pinecone  
PINECONE_API_KEY=your_pinecone_api_key  
PINECONE_ENVIRONMENT=us-west1-gcp  
PINECONE_INDEX_NAME=llm-embeddings  
PINECONE_NAMESPACE=default  

# Optional: Weaviate  
WEAVIATE_URL=http://weaviate.example.com  
WEAVIATE_API_KEY=your_weaviate_api_key  

# Git Settings for Code Agent  
GIT_REPO_URL=git@github.com:org/repo.git  
GIT_MAIN_BRANCH=main  
GIT_COMMIT_USER_NAME=agent-bot  
GIT_COMMIT_USER_EMAIL=agent@company.com  
GIT_SSH_KEY_PATH=/home/agent/.ssh/id_rsa  

# Feedback DB (PostgreSQL)  
FEEDBACK_DB_URL=postgresql://feedback_user:password@db.example.com:5432/feedback_db  
FEEDBACK_DB_MAX_POOL_SIZE=10  

# Metrics & Monitoring  
PROMETHEUS_METRICS_PORT=8001  
OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317  
OTEL_SERVICE_NAME=multi-agent-pipeline  

# CI/CD Registry  
CI_REGISTRY_URL=registry.example.com  
CI_REGISTRY_USER=ci-user  
CI_REGISTRY_PASSWORD=ci-password  

# Docker  
DOCKER_REGISTRY=registry.example.com  
DOCKER_IMAGE_PREFIX=multi-agent-pipeline  

# Kubernetes  
K8S_NAMESPACE=multi-agent  
K8S_SERVICE_ACCOUNT=agent-sa  

# Logging & Error Tracking  
LOG_LEVEL=INFO  
SENTRY_DSN=https://examplePublicKey@o0.ingest.sentry.io/0  

# Retry Settings  
MAX_RETRIES=5  
RETRY_BACKOFF_BASE=2  

# General  
DEFAULT_TIMEOUT_SECONDS=30  
CONCURRENT_WORKERS=5

# Multi-Agent Pipeline Configuration

# ===== MESSAGING CONFIGURATION =====
BROKER_TYPE=kafka
KAFKA_BOOTSTRAP_SERVERS=localhost:9092
KAFKA_TOPIC_ANALYSIS=tasks.analysis
KAFKA_TOPIC_PLANNING=tasks.planning
KAFKA_TOPIC_BLUEPRINT=tasks.blueprint
KAFKA_TOPIC_CODING=tasks.coding
KAFKA_TOPIC_TESTING=tasks.testing
KAFKA_GROUP_PREFIX=agent-group

# Redis Streams (alternative to Kafka)
REDIS_URL=redis://localhost:6379/0
REDIS_CONSUMER_GROUP=multi-agent-group
REDIS_CONSUMER_NAME=consumer-1

# ===== EXTERNAL SERVICES =====
# OpenAI API
OPENAI_API_KEY=your_openai_api_key_here

# Vector Database (Weaviate)
VECTOR_DB_URL=http://localhost:8080
VECTOR_DB_API_KEY=optional_api_key

# Git Integration
GITHUB_REPO=your_username/your_repo
GITHUB_TOKEN=your_github_token
GIT_URL=http://localhost:3000

# Object Storage (S3/MinIO)
S3_ENDPOINT_URL=http://localhost:9000
S3_ACCESS_KEY=minioadmin
S3_SECRET_KEY=minioadmin
S3_BUCKET=pipeline-artifacts

# ===== DATABASE CONFIGURATION =====
# MongoDB (for persistence)
MONGODB_URI=mongodb://localhost:27017
MONGODB_DB_NAME=pipeline

# PostgreSQL (if needed)
DATABASE_URL=postgresql+asyncpg://user:password@localhost:5432/pipeline

# ===== AGENT CONFIGURATION =====
# Logging
LOG_LEVEL=INFO

# Agent-specific topics (override defaults)
SUBSCRIBE_TOPIC_ANALYSIS=tasks.analysis
SUBSCRIBE_TOPIC_PLANNING=tasks.planning
SUBSCRIBE_TOPIC_BLUEPRINT=tasks.blueprint
SUBSCRIBE_TOPIC_CODING=tasks.coding
SUBSCRIBE_TOPIC_TESTING=tasks.testing

PUBLISH_TOPIC_ANALYSIS=tasks.planning
PUBLISH_TOPIC_PLANNING=tasks.blueprint
PUBLISH_TOPIC_BLUEPRINT=tasks.coding
PUBLISH_TOPIC_CODING=tasks.testing
PUBLISH_TOPIC_TESTING=results.testing

# Orchestrator configuration
SUBSCRIBE_TOPICS=tasks.analysis,tasks.planning,tasks.blueprint,tasks.coding,tasks.testing
ORCHESTRATION_EVENTS_TOPIC=orchestration.events
DASHBOARD_WS_URL=ws://localhost:8002/ws

# ===== MONITORING =====
# Prometheus
PROMETHEUS_URL=http://localhost:9090

# Grafana
GRAFANA_URL=http://localhost:3001
GRAFANA_ADMIN_PASSWORD=admin

# ===== SECURITY =====
# JWT Secret (if implementing authentication)
JWT_SECRET=your_jwt_secret_here

# API Rate Limiting
RATE_LIMIT_PER_MINUTE=100

# ===== PERFORMANCE TUNING =====
# Worker processes per agent
WORKERS_PER_AGENT=1

# Queue sizes
MAX_QUEUE_SIZE=1000

# Timeouts (seconds)
MESSAGE_TIMEOUT=300
ANALYSIS_TIMEOUT=600
PLANNING_TIMEOUT=300
BLUEPRINT_TIMEOUT=600
CODING_TIMEOUT=1200
TESTING_TIMEOUT=900

# ===== DEVELOPMENT =====
# Development mode
DEVELOPMENT=true

# Debug logging
DEBUG=false

# Mock external services
MOCK_OPENAI=false
MOCK_GIT=false

# ===== CONTAINER CONFIGURATION =====
# Docker network
DOCKER_NETWORK=multi-agent-network

# Container memory limits
ANALYSIS_MEMORY_LIMIT=512m
PLANNING_MEMORY_LIMIT=512m
BLUEPRINT_MEMORY_LIMIT=512m
CODING_MEMORY_LIMIT=1g
TESTING_MEMORY_LIMIT=1g
ORCHESTRATOR_MEMORY_LIMIT=1g

# Health check intervals
HEALTH_CHECK_INTERVAL=30s
HEALTH_CHECK_TIMEOUT=10s
HEALTH_CHECK_RETRIES=3